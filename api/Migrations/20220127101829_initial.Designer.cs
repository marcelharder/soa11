// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220127101829_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("api.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("api.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<string>("IBAN")
                        .HasColumnType("longtext");

                    b.Property<string>("Interests")
                        .HasColumnType("longtext");

                    b.Property<string>("Introduction")
                        .HasColumnType("longtext");

                    b.Property<string>("KnownAs")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LookingFor")
                        .HasColumnType("longtext");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("hospital_id")
                        .HasColumnType("int");

                    b.Property<bool>("ltk")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("worked_in")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("api.Entities.AppUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("api.Entities.ClassTableVlad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("caption")
                        .HasColumnType("longtext");

                    b.Property<int>("current_user_id")
                        .HasColumnType("int");

                    b.Property<string>("dataXas")
                        .HasColumnType("longtext");

                    b.Property<string>("dataYas")
                        .HasColumnType("longtext");

                    b.Property<int>("hospitalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vlads");
                });

            modelBuilder.Entity("api.Entities.Class_Aortic_Surgery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("aneurysm")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("aneurysm_type")
                        .HasColumnType("longtext");

                    b.Property<bool>("coarctation")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("dissection")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("dissection_onset")
                        .HasColumnType("longtext");

                    b.Property<string>("dissection_type")
                        .HasColumnType("longtext");

                    b.Property<string>("indication")
                        .HasColumnType("longtext");

                    b.Property<string>("operative_technique")
                        .HasColumnType("longtext");

                    b.Property<bool>("other_congenital")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("pathology")
                        .HasColumnType("longtext");

                    b.Property<int>("procedure_id")
                        .HasColumnType("int");

                    b.Property<string>("range")
                        .HasColumnType("longtext");

                    b.Property<string>("stent_graft_technique")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AorticSurgeries");
                });

            modelBuilder.Entity("api.Entities.Class_CABG", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ANGLE01")
                        .HasColumnType("longtext");

                    b.Property<string>("ANGLE02")
                        .HasColumnType("longtext");

                    b.Property<string>("ANGLE03")
                        .HasColumnType("longtext");

                    b.Property<string>("ANGLE04")
                        .HasColumnType("longtext");

                    b.Property<string>("ANGLE05")
                        .HasColumnType("longtext");

                    b.Property<string>("ANGLE06")
                        .HasColumnType("longtext");

                    b.Property<string>("B1_CONDUIT")
                        .HasColumnType("longtext");

                    b.Property<string>("B1_DONOR")
                        .HasColumnType("longtext");

                    b.Property<string>("B1_LOCPROC")
                        .HasColumnType("longtext");

                    b.Property<string>("B1_SITE")
                        .HasColumnType("longtext");

                    b.Property<string>("B1_SITEPA")
                        .HasColumnType("longtext");

                    b.Property<string>("B1_TYPE_DA")
                        .HasColumnType("longtext");

                    b.Property<string>("B2_CONDUIT")
                        .HasColumnType("longtext");

                    b.Property<string>("B2_DONOR")
                        .HasColumnType("longtext");

                    b.Property<string>("B2_LOCPROC")
                        .HasColumnType("longtext");

                    b.Property<string>("B2_SITE")
                        .HasColumnType("longtext");

                    b.Property<string>("B2_SITEPA")
                        .HasColumnType("longtext");

                    b.Property<string>("B2_TYPE_DA")
                        .HasColumnType("longtext");

                    b.Property<string>("B3_CONDUIT")
                        .HasColumnType("longtext");

                    b.Property<string>("B3_DONOR")
                        .HasColumnType("longtext");

                    b.Property<string>("B3_LOCPROC")
                        .HasColumnType("longtext");

                    b.Property<string>("B3_SITE")
                        .HasColumnType("longtext");

                    b.Property<string>("B3_SITEPA")
                        .HasColumnType("longtext");

                    b.Property<string>("B3_TYPE_DA")
                        .HasColumnType("longtext");

                    b.Property<string>("B4_CONDUIT")
                        .HasColumnType("longtext");

                    b.Property<string>("B4_DONOR")
                        .HasColumnType("longtext");

                    b.Property<string>("B4_LOCPROC")
                        .HasColumnType("longtext");

                    b.Property<string>("B4_SITE")
                        .HasColumnType("longtext");

                    b.Property<string>("B4_SITEPA")
                        .HasColumnType("longtext");

                    b.Property<string>("B4_TYPE_DA")
                        .HasColumnType("longtext");

                    b.Property<string>("B5_CONDUIT")
                        .HasColumnType("longtext");

                    b.Property<string>("B5_DONOR")
                        .HasColumnType("longtext");

                    b.Property<string>("B5_LOCPROC")
                        .HasColumnType("longtext");

                    b.Property<string>("B5_SITE")
                        .HasColumnType("longtext");

                    b.Property<string>("B5_SITEPA")
                        .HasColumnType("longtext");

                    b.Property<string>("B5_TYPE_DA")
                        .HasColumnType("longtext");

                    b.Property<string>("B6_CONDUIT")
                        .HasColumnType("longtext");

                    b.Property<string>("B6_DONOR")
                        .HasColumnType("longtext");

                    b.Property<string>("B6_LOCPROC")
                        .HasColumnType("longtext");

                    b.Property<string>("B6_SITE")
                        .HasColumnType("longtext");

                    b.Property<string>("B6_SITEPA")
                        .HasColumnType("longtext");

                    b.Property<string>("B6_TYPE_DA")
                        .HasColumnType("longtext");

                    b.Property<string>("CAB")
                        .HasColumnType("longtext");

                    b.Property<string>("DIAM01")
                        .HasColumnType("longtext");

                    b.Property<string>("DIAM02")
                        .HasColumnType("longtext");

                    b.Property<string>("DIAM03")
                        .HasColumnType("longtext");

                    b.Property<string>("DIAM04")
                        .HasColumnType("longtext");

                    b.Property<string>("DIAM05")
                        .HasColumnType("longtext");

                    b.Property<string>("DIAM06")
                        .HasColumnType("longtext");

                    b.Property<int?>("PATIENT_ID")
                        .HasColumnType("int");

                    b.Property<int>("PROCEDURE_ID")
                        .HasColumnType("int");

                    b.Property<string>("Q01")
                        .HasColumnType("longtext");

                    b.Property<string>("Q02")
                        .HasColumnType("longtext");

                    b.Property<string>("Q03")
                        .HasColumnType("longtext");

                    b.Property<string>("Q04")
                        .HasColumnType("longtext");

                    b.Property<string>("Q05")
                        .HasColumnType("longtext");

                    b.Property<string>("Q06")
                        .HasColumnType("longtext");

                    b.Property<string>("UNPLANNED_CAB")
                        .HasColumnType("longtext");

                    b.Property<string>("art01")
                        .HasColumnType("longtext");

                    b.Property<string>("art02")
                        .HasColumnType("longtext");

                    b.Property<string>("art03")
                        .HasColumnType("longtext");

                    b.Property<string>("art04")
                        .HasColumnType("longtext");

                    b.Property<string>("art05")
                        .HasColumnType("longtext");

                    b.Property<string>("art06")
                        .HasColumnType("longtext");

                    b.Property<string>("course")
                        .HasColumnType("longtext");

                    b.Property<string>("leg_harvest_location")
                        .HasColumnType("longtext");

                    b.Property<string>("leg_harvest_technique")
                        .HasColumnType("longtext");

                    b.Property<string>("radial_harvest_location")
                        .HasColumnType("longtext");

                    b.Property<string>("radial_harvest_technique")
                        .HasColumnType("longtext");

                    b.Property<int?>("tachtig_switch")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CABGS");
                });

            modelBuilder.Entity("api.Entities.Class_CPB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Antiarrhythmics")
                        .HasColumnType("int");

                    b.Property<string>("BVAD")
                        .HasColumnType("longtext");

                    b.Property<string>("CARDIOPLEGIA")
                        .HasColumnType("longtext");

                    b.Property<int?>("CARDIOPLEGIA_TEMP_COLD")
                        .HasColumnType("int");

                    b.Property<int?>("CARDIOPLEGIA_TEMP_WARM")
                        .HasColumnType("int");

                    b.Property<string>("CARDIOPLEGIA_TYPE")
                        .HasColumnType("longtext");

                    b.Property<int?>("CARDIOVERSION")
                        .HasColumnType("int");

                    b.Property<int>("CROSS_CLAMP_TIME")
                        .HasColumnType("int");

                    b.Property<string>("IABP")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("IABP_DATE")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IABP_IND")
                        .HasColumnType("longtext");

                    b.Property<string>("IABP_OPTIONS")
                        .HasColumnType("longtext");

                    b.Property<int?>("INFUSION_DOSE_CONT")
                        .HasColumnType("int");

                    b.Property<int?>("INFUSION_DOSE_INT")
                        .HasColumnType("int");

                    b.Property<string>("INFUSION_MODE_ANTE")
                        .HasColumnType("longtext");

                    b.Property<int?>("INFUSION_MODE_RETRO")
                        .HasColumnType("int");

                    b.Property<int?>("INOTROPES")
                        .HasColumnType("int");

                    b.Property<int?>("LOWEST_CORE_TEMP")
                        .HasColumnType("int");

                    b.Property<int?>("LVAD")
                        .HasColumnType("int");

                    b.Property<int?>("PACING_ATRIAL")
                        .HasColumnType("int");

                    b.Property<int?>("PACING_HARV")
                        .HasColumnType("int");

                    b.Property<int?>("PACING_VENTRICULAR")
                        .HasColumnType("int");

                    b.Property<int>("PERFUSION_TIME")
                        .HasColumnType("int");

                    b.Property<int>("PROCEDURE_ID")
                        .HasColumnType("int");

                    b.Property<int?>("RVAD")
                        .HasColumnType("int");

                    b.Property<int?>("SKIN_INCISION_START_TIME")
                        .HasColumnType("int");

                    b.Property<int?>("SKIN_INCISION_STOP_TIME")
                        .HasColumnType("int");

                    b.Property<string>("TAH")
                        .HasColumnType("longtext");

                    b.Property<string>("VAD")
                        .HasColumnType("longtext");

                    b.Property<string>("a1")
                        .HasColumnType("longtext");

                    b.Property<string>("a2")
                        .HasColumnType("longtext");

                    b.Property<string>("a3")
                        .HasColumnType("longtext");

                    b.Property<string>("a4")
                        .HasColumnType("longtext");

                    b.Property<string>("acp_circ")
                        .HasColumnType("longtext");

                    b.Property<string>("aoOCCL")
                        .HasColumnType("longtext");

                    b.Property<string>("cardiac_support")
                        .HasColumnType("longtext");

                    b.Property<string>("cardiopl_temp")
                        .HasColumnType("longtext");

                    b.Property<string>("cardiopl_timing")
                        .HasColumnType("longtext");

                    b.Property<int?>("clamp_start_hr")
                        .HasColumnType("int");

                    b.Property<int?>("clamp_start_min")
                        .HasColumnType("int");

                    b.Property<int?>("clamp_stop_hr")
                        .HasColumnType("int");

                    b.Property<int?>("clamp_stop_min")
                        .HasColumnType("int");

                    b.Property<string>("cns_protect")
                        .HasColumnType("longtext");

                    b.Property<int?>("cns_time_1")
                        .HasColumnType("int");

                    b.Property<int?>("cns_time_2")
                        .HasColumnType("int");

                    b.Property<int?>("cns_time_3")
                        .HasColumnType("int");

                    b.Property<int?>("cpb_start_hr")
                        .HasColumnType("int");

                    b.Property<int?>("cpb_start_min")
                        .HasColumnType("int");

                    b.Property<int?>("cpb_stop_hr")
                        .HasColumnType("int");

                    b.Property<int?>("cpb_stop_min")
                        .HasColumnType("int");

                    b.Property<string>("cpb_used")
                        .HasColumnType("longtext");

                    b.Property<string>("deep_hypo")
                        .HasColumnType("longtext");

                    b.Property<string>("deep_hypo_rcp")
                        .HasColumnType("longtext");

                    b.Property<int?>("long_isch")
                        .HasColumnType("int");

                    b.Property<string>("myoplasty")
                        .HasColumnType("longtext");

                    b.Property<string>("nonCMProtect")
                        .HasColumnType("longtext");

                    b.Property<short?>("nonCMProtect_type")
                        .HasColumnType("smallint");

                    b.Property<string>("opcab_attempt")
                        .HasColumnType("longtext");

                    b.Property<string>("other_cardiac_support")
                        .HasColumnType("longtext");

                    b.Property<string>("other_cns_protect")
                        .HasColumnType("longtext");

                    b.Property<string>("v1")
                        .HasColumnType("longtext");

                    b.Property<string>("v2")
                        .HasColumnType("longtext");

                    b.Property<string>("v3")
                        .HasColumnType("longtext");

                    b.Property<string>("v4")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CPBS");
                });

            modelBuilder.Entity("api.Entities.Class_Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("active")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("courseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("diploma")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("level")
                        .HasColumnType("int");

                    b.Property<string>("location")
                        .HasColumnType("longtext");

                    b.Property<float>("price")
                        .HasColumnType("float");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("api.Entities.Class_Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("liscense_to_kill")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.Property<string>("profession")
                        .HasColumnType("longtext");

                    b.Property<string>("selected_hospital_id")
                        .HasColumnType("longtext");

                    b.Property<string>("user_name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("api.Entities.Class_Epa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EpaId")
                        .HasColumnType("int");

                    b.Property<string>("category")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("date_finished")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("date_started")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("finished")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("grade")
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("option_1")
                        .HasColumnType("longtext");

                    b.Property<string>("option_2")
                        .HasColumnType("longtext");

                    b.Property<string>("option_3")
                        .HasColumnType("longtext");

                    b.Property<string>("option_4")
                        .HasColumnType("longtext");

                    b.Property<string>("option_5")
                        .HasColumnType("longtext");

                    b.Property<string>("option_6")
                        .HasColumnType("longtext");

                    b.Property<string>("option_7")
                        .HasColumnType("longtext");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("Epaas");
                });

            modelBuilder.Entity("api.Entities.Class_Final_operative_report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Anaesthesist")
                        .HasColumnType("longtext");

                    b.Property<string>("AorticLineA")
                        .HasColumnType("longtext");

                    b.Property<string>("AorticLineB")
                        .HasColumnType("longtext");

                    b.Property<string>("AorticLineC")
                        .HasColumnType("longtext");

                    b.Property<string>("Assistant")
                        .HasColumnType("longtext");

                    b.Property<string>("Attending")
                        .HasColumnType("longtext");

                    b.Property<string>("Comment1")
                        .HasColumnType("longtext");

                    b.Property<string>("Comment2")
                        .HasColumnType("longtext");

                    b.Property<string>("Comment3")
                        .HasColumnType("longtext");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("longtext");

                    b.Property<string>("FreeText")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderText1")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderText2")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderText3")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderText4")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderText5")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderText6")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderText7")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderText8")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderText9")
                        .HasColumnType("longtext");

                    b.Property<string>("HospitalUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("MedRecNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("MitralLineA")
                        .HasColumnType("longtext");

                    b.Property<string>("MitralLineB")
                        .HasColumnType("longtext");

                    b.Property<string>("MitralLineC")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("OperatieDate")
                        .HasColumnType("longtext");

                    b.Property<string>("Perfusionist")
                        .HasColumnType("longtext");

                    b.Property<string>("ProcedureDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel1")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel10")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel11")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel12")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel13")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel14")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel15")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel16")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel17")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel18")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel19")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel2")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel20")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel21")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel22")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel23")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel24")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel25")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel26")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel27")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel28")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel29")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel3")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel30")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel31")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel32")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel33")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel34")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel35")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel36")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel37")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel38")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel39")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel4")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel40")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel41")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel42")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel43")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel44")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel45")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel46")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel47")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel48")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel49")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel5")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel50")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel51")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel52")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel53")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel54")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel55")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel56")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel57")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel58")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel59")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel6")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel60")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel61")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel62")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel63")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel7")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel8")
                        .HasColumnType("longtext");

                    b.Property<string>("Regel9")
                        .HasColumnType("longtext");

                    b.Property<string>("Surgeon")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.Property<int>("procedure_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("finalReports");
                });

            modelBuilder.Entity("api.Entities.Class_Hospital", b =>
                {
                    b.Property<int>("hospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Fax")
                        .HasColumnType("longtext");

                    b.Property<string>("HospitalName")
                        .HasColumnType("longtext");

                    b.Property<string>("HospitalNo")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("OpReportDetails1")
                        .HasColumnType("longtext");

                    b.Property<string>("OpReportDetails2")
                        .HasColumnType("longtext");

                    b.Property<string>("OpReportDetails3")
                        .HasColumnType("longtext");

                    b.Property<string>("OpReportDetails4")
                        .HasColumnType("longtext");

                    b.Property<string>("OpReportDetails5")
                        .HasColumnType("longtext");

                    b.Property<string>("OpReportDetails6")
                        .HasColumnType("longtext");

                    b.Property<string>("OpReportDetails7")
                        .HasColumnType("longtext");

                    b.Property<string>("OpReportDetails8")
                        .HasColumnType("longtext");

                    b.Property<string>("OpReportDetails9")
                        .HasColumnType("longtext");

                    b.Property<string>("RegExpr")
                        .HasColumnType("longtext");

                    b.Property<string>("SampleMrn")
                        .HasColumnType("longtext");

                    b.Property<string>("Selected_Hospital_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .HasColumnType("longtext");

                    b.Property<bool>("usesOnlineValveInventory")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("hospitalId");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("api.Entities.Class_LTX", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AcceptorProcedureStart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DonorProcedureStart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DonorStartIschemia")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DonorStartReperfusion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Indication")
                        .HasColumnType("longtext");

                    b.Property<int>("PROCEDURE_ID")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfTX")
                        .HasColumnType("longtext");

                    b.Property<string>("startHr01")
                        .HasColumnType("longtext");

                    b.Property<string>("startHr02")
                        .HasColumnType("longtext");

                    b.Property<string>("startHr03")
                        .HasColumnType("longtext");

                    b.Property<string>("startHr04")
                        .HasColumnType("longtext");

                    b.Property<string>("startMin01")
                        .HasColumnType("longtext");

                    b.Property<string>("startMin02")
                        .HasColumnType("longtext");

                    b.Property<string>("startMin03")
                        .HasColumnType("longtext");

                    b.Property<string>("startMin04")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LTXs");
                });

            modelBuilder.Entity("api.Entities.Class_Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CCS")
                        .HasColumnType("longtext");

                    b.Property<int>("EuroScoreNo")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("IsPreviousIntervention")
                        .HasColumnType("longtext");

                    b.Property<string>("LVEF")
                        .HasColumnType("longtext");

                    b.Property<string>("MRN")
                        .HasColumnType("longtext");

                    b.Property<string>("NOPM")
                        .HasColumnType("longtext");

                    b.Property<string>("NYHA")
                        .HasColumnType("longtext");

                    b.Property<string>("active_endocarditis")
                        .HasColumnType("longtext");

                    b.Property<string>("copd")
                        .HasColumnType("longtext");

                    b.Property<int>("creat_number")
                        .HasColumnType("int");

                    b.Property<bool>("crit_arrythmia")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("crit_iabp")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("crit_inotropes")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("crit_pacemaker")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("crit_renal_failure")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("crit_resuscitation")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("crit_shock")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("crit_ventilated")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("critical_preoperative_state")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("dead")
                        .HasColumnType("int");

                    b.Property<string>("diabetes_on_insulin")
                        .HasColumnType("longtext");

                    b.Property<bool>("dialysis")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("extra_cardiac_arteriopathy")
                        .HasColumnType("longtext");

                    b.Property<string>("gender")
                        .HasColumnType("longtext");

                    b.Property<string>("height")
                        .HasColumnType("longtext");

                    b.Property<string>("log_score")
                        .HasColumnType("longtext");

                    b.Property<string>("poor_mobility")
                        .HasColumnType("longtext");

                    b.Property<string>("previous_cardiac_surgery")
                        .HasColumnType("longtext");

                    b.Property<string>("reason_emergent")
                        .HasColumnType("longtext");

                    b.Property<string>("reason_urgent")
                        .HasColumnType("longtext");

                    b.Property<string>("recent_mi")
                        .HasColumnType("longtext");

                    b.Property<int>("soort_procedure")
                        .HasColumnType("int");

                    b.Property<string>("surgery_on_thoracic_aorta")
                        .HasColumnType("longtext");

                    b.Property<string>("systolic_pa_pressure")
                        .HasColumnType("longtext");

                    b.Property<string>("timing")
                        .HasColumnType("longtext");

                    b.Property<string>("weight")
                        .HasColumnType("longtext");

                    b.Property<string>("weight_of_intervention")
                        .HasColumnType("longtext");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("api.Entities.Class_PostOp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Autologous_Blood")
                        .HasColumnType("longtext");

                    b.Property<string>("Blood_Products")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DISCHARGE_DATE")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EXTUBATION_1_DATE")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EXTUBATION_DATE")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FFP")
                        .HasColumnType("int");

                    b.Property<DateTime>("ICU_ARRIVAL_1_DATE")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ICU_ARRIVAL_DATE")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ICU_DISCHARGE_1_DATE")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ICU_DISCHARGE_DATE")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ICU_Stay_1")
                        .HasColumnType("longtext");

                    b.Property<string>("ICU_Stay_2")
                        .HasColumnType("longtext");

                    b.Property<string>("ICU_Stay_3")
                        .HasColumnType("longtext");

                    b.Property<int>("PATIENT_ID")
                        .HasColumnType("int");

                    b.Property<int>("PC")
                        .HasColumnType("int");

                    b.Property<int>("PROCEDURE_ID")
                        .HasColumnType("int");

                    b.Property<int>("Platelets")
                        .HasColumnType("int");

                    b.Property<DateTime>("REINTUBATION_DATE")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Vent_Stay_1")
                        .HasColumnType("longtext");

                    b.Property<string>("Vent_Stay_2")
                        .HasColumnType("longtext");

                    b.Property<string>("Vent_Stay_3")
                        .HasColumnType("longtext");

                    b.Property<string>("When_Used")
                        .HasColumnType("longtext");

                    b.Property<string>("activities_discharge")
                        .HasColumnType("longtext");

                    b.Property<string>("complicatie_1")
                        .HasColumnType("longtext");

                    b.Property<string>("complicatie_2")
                        .HasColumnType("longtext");

                    b.Property<string>("complicatie_3")
                        .HasColumnType("longtext");

                    b.Property<string>("complicatie_4")
                        .HasColumnType("longtext");

                    b.Property<string>("complicatie_5")
                        .HasColumnType("longtext");

                    b.Property<string>("complicatie_6")
                        .HasColumnType("longtext");

                    b.Property<string>("complicatie_7")
                        .HasColumnType("longtext");

                    b.Property<string>("complicatie_8")
                        .HasColumnType("longtext");

                    b.Property<string>("complicatie_9")
                        .HasColumnType("longtext");

                    b.Property<short>("dead_cause")
                        .HasColumnType("smallint");

                    b.Property<short>("dead_location")
                        .HasColumnType("smallint");

                    b.Property<short>("discharge_diagnosis")
                        .HasColumnType("smallint");

                    b.Property<string>("full_description")
                        .HasColumnType("longtext");

                    b.Property<string>("highest_creatinine")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("mortality_date")
                        .HasColumnType("datetime(6)");

                    b.Property<short>("overleden_na_deze_operatie")
                        .HasColumnType("smallint");

                    b.Property<string>("readmitted")
                        .HasColumnType("longtext");

                    b.Property<string>("reintubated")
                        .HasColumnType("longtext");

                    b.Property<string>("sent_to")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PostOps");
                });

            modelBuilder.Entity("api.Entities.Class_Preview_Operative_report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("procedure_id")
                        .HasColumnType("int");

                    b.Property<string>("regel_1")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_10")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_11")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_12")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_13")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_14")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_15")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_16")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_17")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_18")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_19")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_2")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_20")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_21")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_22")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_23")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_24")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_25")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_26")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_27")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_28")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_29")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_3")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_30")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_31")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_32")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_33")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_4")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_5")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_6")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_7")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_8")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_9")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Previews");
                });

            modelBuilder.Entity("api.Entities.Class_Procedure", b =>
                {
                    b.Property<int>("ProcedureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Class_PatientPatientId")
                        .HasColumnType("int");

                    b.Property<string>("Comment1")
                        .HasColumnType("longtext");

                    b.Property<string>("Comment2")
                        .HasColumnType("longtext");

                    b.Property<string>("Comment3")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfSurgery")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("SelectedAnaesthesist")
                        .HasColumnType("int");

                    b.Property<int>("SelectedAssistant")
                        .HasColumnType("int");

                    b.Property<int>("SelectedEmergencyTiming")
                        .HasColumnType("int");

                    b.Property<int>("SelectedInotropes")
                        .HasColumnType("int");

                    b.Property<int>("SelectedNurse1")
                        .HasColumnType("int");

                    b.Property<int>("SelectedNurse2")
                        .HasColumnType("int");

                    b.Property<int>("SelectedPacemaker")
                        .HasColumnType("int");

                    b.Property<int>("SelectedPerfusionist")
                        .HasColumnType("int");

                    b.Property<int>("SelectedPericard")
                        .HasColumnType("int");

                    b.Property<int>("SelectedPleura")
                        .HasColumnType("int");

                    b.Property<int>("SelectedResponsibleSurgeon")
                        .HasColumnType("int");

                    b.Property<int>("SelectedStartHr")
                        .HasColumnType("int");

                    b.Property<int>("SelectedStartMin")
                        .HasColumnType("int");

                    b.Property<int>("SelectedStopHr")
                        .HasColumnType("int");

                    b.Property<int>("SelectedStopMin")
                        .HasColumnType("int");

                    b.Property<int>("SelectedSurgeon")
                        .HasColumnType("int");

                    b.Property<int>("SelectedTiming")
                        .HasColumnType("int");

                    b.Property<int>("SelectedUrgentTiming")
                        .HasColumnType("int");

                    b.Property<string>("Sequence")
                        .HasColumnType("longtext");

                    b.Property<bool>("SurgeryBeforeNextWorkingDay")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TotalTime")
                        .HasColumnType("int");

                    b.Property<string>("emailHash")
                        .HasColumnType("longtext");

                    b.Property<int>("fdType")
                        .HasColumnType("int");

                    b.Property<int>("hospital")
                        .HasColumnType("int");

                    b.Property<int>("refPhys")
                        .HasColumnType("int");

                    b.HasKey("ProcedureId");

                    b.HasIndex("Class_PatientPatientId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("api.Entities.Class_Ref_Phys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("address")
                        .HasColumnType("longtext");

                    b.Property<string>("city")
                        .HasColumnType("longtext");

                    b.Property<string>("country")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("fax")
                        .HasColumnType("longtext");

                    b.Property<int>("hospital_id")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("postcode")
                        .HasColumnType("longtext");

                    b.Property<bool>("send_email")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("state")
                        .HasColumnType("longtext");

                    b.Property<string>("street")
                        .HasColumnType("longtext");

                    b.Property<string>("tel")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RefPhys");
                });

            modelBuilder.Entity("api.Entities.Class_Suggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("regel_10_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_10_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_10_c")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_11_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_11_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_11_c")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_12_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_12_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_12_c")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_13_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_13_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_13_c")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_14_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_14_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_14_c")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_15")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_16")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_17")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_18")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_19")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_1_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_1_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_1_c")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_20")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_21")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_22")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_23")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_24")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_25")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_26")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_27")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_28")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_29")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_2_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_2_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_2_c")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_30")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_31")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_32")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_33")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_3_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_3_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_3_c")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_4_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_4_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_4_c")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_5_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_5_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_5_c")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_6_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_6_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_6_c")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_7_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_7_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_7_c")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_8_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_8_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_8_c")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_9_a")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_9_b")
                        .HasColumnType("longtext");

                    b.Property<string>("regel_9_c")
                        .HasColumnType("longtext");

                    b.Property<int>("soort")
                        .HasColumnType("int");

                    b.Property<string>("user")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Suggestions");
                });

            modelBuilder.Entity("api.Entities.Class_Valve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Combined")
                        .HasColumnType("longtext");

                    b.Property<string>("EXPLANT")
                        .HasColumnType("longtext");

                    b.Property<string>("IMPLANT")
                        .HasColumnType("longtext");

                    b.Property<string>("Implant_Position")
                        .HasColumnType("longtext");

                    b.Property<string>("MODEL")
                        .HasColumnType("longtext");

                    b.Property<string>("MODEL_EXP")
                        .HasColumnType("longtext");

                    b.Property<string>("Memo")
                        .HasColumnType("longtext");

                    b.Property<string>("ProcedureAetiology")
                        .HasColumnType("longtext");

                    b.Property<int>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<string>("ProcedureType")
                        .HasColumnType("longtext");

                    b.Property<string>("REPAIR_TYPE")
                        .HasColumnType("longtext");

                    b.Property<string>("RING_USED")
                        .HasColumnType("longtext");

                    b.Property<string>("SERIAL_EXP")
                        .HasColumnType("longtext");

                    b.Property<string>("SERIAL_IMP")
                        .HasColumnType("longtext");

                    b.Property<string>("SIZE")
                        .HasColumnType("longtext");

                    b.Property<string>("SIZE_EXP")
                        .HasColumnType("longtext");

                    b.Property<string>("TYPE")
                        .HasColumnType("longtext");

                    b.Property<int?>("TYPE_EXP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcedureId");

                    b.ToTable("Valves");
                });

            modelBuilder.Entity("api.Entities.Class_Valve_Code", b =>
                {
                    b.Property<int>("codeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<int>("hospitalId")
                        .HasColumnType("int");

                    b.Property<string>("position")
                        .HasColumnType("longtext");

                    b.Property<int>("soort")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("longtext");

                    b.Property<int>("valveTypeId")
                        .HasColumnType("int");

                    b.HasKey("codeId");

                    b.HasIndex("hospitalId");

                    b.ToTable("Class_Valve_Code");
                });

            modelBuilder.Entity("api.Entities.Class_minInv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ACUTE_FLOW")
                        .HasColumnType("int");

                    b.Property<int>("ACUTE_FLOW_DETAILS")
                        .HasColumnType("int");

                    b.Property<int>("AL_TIME")
                        .HasColumnType("int");

                    b.Property<int>("CONVERSION_DETAILS")
                        .HasColumnType("int");

                    b.Property<int>("CONVERSION_TO_STANDARD")
                        .HasColumnType("int");

                    b.Property<int>("CX_TIME")
                        .HasColumnType("int");

                    b.Property<int>("IABP")
                        .HasColumnType("int");

                    b.Property<int>("IABP_WHEN")
                        .HasColumnType("int");

                    b.Property<int>("IABP_WHY")
                        .HasColumnType("int");

                    b.Property<int>("LAD_TIME")
                        .HasColumnType("int");

                    b.Property<int>("LIMA_HARVEST")
                        .HasColumnType("int");

                    b.Property<int>("NUMBER_OF_INCISIONS")
                        .HasColumnType("int");

                    b.Property<int>("PRIMARY_INCISION")
                        .HasColumnType("int");

                    b.Property<int>("PRIMARY_INCISION_DETAILS")
                        .HasColumnType("int");

                    b.Property<int>("PROCEDURE_ID")
                        .HasColumnType("int");

                    b.Property<int>("RCA_TIME")
                        .HasColumnType("int");

                    b.Property<int>("ROBOT")
                        .HasColumnType("int");

                    b.Property<int>("ROBOT_AORTIC")
                        .HasColumnType("int");

                    b.Property<int>("ROBOT_CABG")
                        .HasColumnType("int");

                    b.Property<int>("ROBOT_MITRAL")
                        .HasColumnType("int");

                    b.Property<int>("ROBOT_PULMONARY")
                        .HasColumnType("int");

                    b.Property<int>("ROBOT_TRICUSPID")
                        .HasColumnType("int");

                    b.Property<int>("SHUNT")
                        .HasColumnType("int");

                    b.Property<int>("STRATEGY")
                        .HasColumnType("int");

                    b.Property<int>("SUTURE")
                        .HasColumnType("int");

                    b.Property<int>("VESSEL")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MinInvs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("api.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("api.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("api.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("api.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.Entities.AppUserRole", b =>
                {
                    b.HasOne("api.Entities.AppRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Entities.AppUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Entities.Class_Course", b =>
                {
                    b.HasOne("api.Entities.AppUser", "user")
                        .WithMany("Courses")
                        .HasForeignKey("userId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("api.Entities.Class_Epa", b =>
                {
                    b.HasOne("api.Entities.AppUser", "user")
                        .WithMany("Epa")
                        .HasForeignKey("userId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("api.Entities.Class_Procedure", b =>
                {
                    b.HasOne("api.Entities.Class_Patient", "Class_Patient")
                        .WithMany("procedures")
                        .HasForeignKey("Class_PatientPatientId");

                    b.Navigation("Class_Patient");
                });

            modelBuilder.Entity("api.Entities.Class_Valve", b =>
                {
                    b.HasOne("api.Entities.Class_Procedure", "procedure")
                        .WithMany("ValvesUsed")
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("procedure");
                });

            modelBuilder.Entity("api.Entities.Class_Valve_Code", b =>
                {
                    b.HasOne("api.Entities.Class_Hospital", "hospital")
                        .WithMany("valvecodes")
                        .HasForeignKey("hospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hospital");
                });

            modelBuilder.Entity("api.Entities.AppRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("api.Entities.AppUser", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Epa");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("api.Entities.Class_Hospital", b =>
                {
                    b.Navigation("valvecodes");
                });

            modelBuilder.Entity("api.Entities.Class_Patient", b =>
                {
                    b.Navigation("procedures");
                });

            modelBuilder.Entity("api.Entities.Class_Procedure", b =>
                {
                    b.Navigation("ValvesUsed");
                });
#pragma warning restore 612, 618
        }
    }
}
